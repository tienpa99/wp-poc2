{"version":3,"file":"chunk-config-tab-scanner.lite.js?ver=b54d2ca4b83dec76","mappings":"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","sources":["webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/blocker/noticeBlockerNotActive.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/internal/sitemap-crawler@0.2.18/utils/mapUrlToRootUrl.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/internal/sitemap-crawler@0.2.18/findByRobots.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/internal/sitemap-crawler@0.2.18/findByKnownFilenames.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/internal/sitemap-crawler@0.2.18/crawl.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/internal/sitemap-crawler@0.2.18/parse.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/others/scanner/crawlSitemap.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/internal/sitemap-crawler@0.2.18/find.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/progress.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/hooks/useScannerFromSitemap.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/allExternalUrls/markup.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/allExternalUrls/table.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/presetCardActionOpenExternalUrlsTable.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/presetSelector.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/loadingSkeleton.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/externalUrlActionPopover.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/listItem.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/list.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/components/config/scanner/router.tsx","webpack://devowl-local-files/real-cookie-banner/default-lite/src/hooks/useRouteBlocker.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport { __ } from \"../../../utils\";\nimport { useStores } from \"../../../store\";\nconst BlockerNoticeNotActive = observer(_ref => {\n  let {\n    style\n  } = _ref;\n  const {\n    optionStore: {\n      blockerActive,\n      allBlockerCount\n    }\n  } = useStores();\n  return !blockerActive && allBlockerCount > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notice notice-warning inline below-h2 notice-alt\",\n    style: style\n  }, /*#__PURE__*/React.createElement(\"p\", null, __(\"Content Blockers are globally deactivated in the settings and are therefore not displayed on your website.\"), \" \", \"\\u2022 \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/settings\"\n  }, __(\"Enable now\"))));\n});\nexport { BlockerNoticeNotActive };","/**\n * @see https://stackoverflow.com/a/6944961/5506547\n * @see https://regex101.com/r/wLTlSe/1\n */\nconst REGEXP_URL_PATH = /.+?:\\/\\/.+?(\\/.+?)(?:#|\\?(.*)|$)/;\n\n/**\n * Get path of (sitemap) URL as we do not rely on the received host.\n *\n * - site got cloned with WP Duplicator -> wrong host in robots.txt if not yet flushed\n * - General > Settings is configured with `http` but site is served with `https`\n */\nfunction mapUrlToRootUrl(rootUrl, receivedUrl) {\n  let query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  const rootUrlPath = rootUrl.match(REGEXP_URL_PATH)?.[1] || \"/\";\n  const match = receivedUrl.match(REGEXP_URL_PATH);\n  if (match) {\n    const [, path, receivedQuery] = match; // e.g. `/sitemap.xml`, `my-param=1`\n    const useQuery = receivedQuery ? `?${receivedQuery}${query ? `?${query}` : \"\"}` : query ? `?${query}` : \"\";\n    return `${rootUrl}${path.substr(rootUrlPath.length)}${useQuery}`;\n  }\n  return false;\n}\nexport { mapUrlToRootUrl };","import { mapUrlToRootUrl } from \"./utils\";\nconst ROBOTS_TXT = \"robots.txt\";\n\n/**\n * Look for a valid `robots.txt` and parse `Sitemap` url.\n *\n * @see https://regex101.com/r/Trn97e/1\n * @param forceSitemapArgument Append this query argument to the `robots.txt` in case you can server-side activate the sitemap\n */\nasync function findByRobots(url, forceSitemapArgument) {\n  try {\n    const query = forceSitemapArgument ? `${forceSitemapArgument}=1` : \"\";\n    const response = await fetch(`${url}${ROBOTS_TXT}${query ? `?${query}` : \"\"}`);\n    if (!response.ok) {\n      return false;\n    }\n    const content = await response.text();\n    const sitemapUrl = content.match(/^sitemap:(.*)$/im)[1].trim();\n    const correctedSitemapUrl = mapUrlToRootUrl(url, sitemapUrl, query);\n    if (correctedSitemapUrl) {\n      // Check if sitemap really exists and isn't stale (e.g. deactivate RankMath SEO WP plugin does not recreate robots.txt)\n      const responseCheckSitemap = await fetch(correctedSitemapUrl);\n      if (!responseCheckSitemap.ok) {\n        return false;\n      }\n\n      // Scenario: Sitemap does not exist but a plugin redirects directly to the homepage => no error code\n      const body = await responseCheckSitemap.text();\n      if (!/<(?:sitemap|urlset)/gm.test(body)) {\n        return false;\n      }\n      return correctedSitemapUrl;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\nexport { findByRobots };","const KNOWN_FILENAMES = [\"sitemap.xml\", \"sitemap_index.xml\", \"sitemap-index.xml\", \"sitemap/\", \"post-sitemap.xml\", \"sitemap/sitemap.xml\", \"sitemap/index.xml\", \"sitemapindex.xml\", \"sitemap.php\", \"sitemap.txt\", \"index.php/sitemap_index.xml\", \"index.php?xml_sitemap=params=\", \"glossar/sitemap.xml\"];\n\n/**\n * Look known sitemap URLs when it is not yet filled in the `robots.txt`.\n *\n * @see https://pagedart.com/blog/how-to-find-the-sitemap-of-a-website/#manually\n */\nasync function findByKnownFilenames(root) {\n  let tryKnownFilenames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : KNOWN_FILENAMES;\n  const promises = tryKnownFilenames.map(filename => fetch(`${root}${filename}`, {\n    // Do not throw an error for failed CORS requests, instead we expect an empty response\n    mode: \"no-cors\"\n  }));\n  for (const promise of promises) {\n    try {\n      const response = await promise;\n      const responseBody = await response.text();\n\n      // We do not rely on `fetch.ok` cause e.g. RankMath forces `404` error code even the sitemap is rendered\n      if (responseBody.indexOf(\"<sitemapindex\") > -1 || responseBody.indexOf(\"<urlset\") > -1) {\n        return response.url;\n      }\n    } catch (e) {\n      // Silence is golden.\n    }\n  }\n  return false;\n}\nexport { findByKnownFilenames };","import { parse } from \".\";\nimport { mapUrlToRootUrl } from \"./utils\";\n\n/**\n * Use pseudo base so e.g. sitemaps configured as `/sitemap.xml` (relative) configured\n * in `robots.txt` are parsed correctly.\n */\nconst PSEUDO_URL_BASE = \"https://base\";\nasync function crawl(rootUrl, sitemapUrl, sites) {\n  if (!sites) {\n    // Initial crawl\n    try {\n      return (await crawl(rootUrl, sitemapUrl, [])).sort((a, b) => a.length - b.length);\n    } catch (e) {\n      // Atm we are ignoring errors\n      console.error(e);\n      return [];\n    }\n  } else {\n    try {\n      const document = await parse(sitemapUrl);\n      const {\n        protocol: sitemapProtocol\n      } = new URL(sitemapUrl, PSEUDO_URL_BASE);\n\n      // Check if sitemap is an index of multiple sitemaps\n      const sitemapIndex = document.querySelector(\"sitemapindex\");\n      if (sitemapIndex) {\n        const indexUrls = Array.from(sitemapIndex.children).map(c => c.querySelector(\"loc\")?.textContent)\n        // In some cases, the `DOMParser` can return `parsererror` children, we need to skip\n        // them as the other `sitemap` children are still correctly parsed\n        .filter(Boolean);\n\n        // Iterate sequentially instead of concurrent as we are in a browser and we should avoid parallel requests here (CloudFlare Bots etc.)\n        for (const indexUrl of indexUrls) {\n          const useUrl = mapUrlToRootUrl(rootUrl, indexUrl) || indexUrl;\n          await crawl(rootUrl, useUrl, sites);\n        }\n      }\n\n      // Check for URL set (we finally found an URL!)\n      const urlSet = document.querySelector(\"urlset\");\n      if (urlSet) {\n        const urls = Array.from(urlSet.children).map(c => c.querySelector(\"loc\")?.textContent).filter(Boolean).map(url => {\n          try {\n            const urlInstance = new URL(url, PSEUDO_URL_BASE);\n            if (urlInstance.protocol === \"http:\") {\n              urlInstance.protocol = sitemapProtocol;\n            }\n            return urlInstance.toString();\n          } catch (e) {\n            // Silence is golden.\n            return url;\n          }\n        });\n\n        // Not needed atm cause WordPress and plugins force the protocol correctly here\n        //.map((url) => mapUrlToRootUrl(rootUrl, url) || url);\n        sites.push(...urls);\n      }\n    } catch (e) {\n      console.error(`Error occurred during \"crawl('${sitemapUrl}')\":\\n\\r Error: ${e}`);\n    }\n  }\n  return sites;\n}\nexport { crawl };","async function parse(sitemapUrl) {\n  const response = await fetch(sitemapUrl);\n  const body = await response.text();\n  return new DOMParser().parseFromString(body.trim(), \"application/xml\");\n}\nexport { parse };","import { __ } from \"../../utils\";\nimport { crawl, findSitemap } from \"@devowl-wp/sitemap-crawler\";\nasync function crawlSitemap(setStep) {\n  const textOfferSupport = __('If you think a sitemap exists but you get this error, please <a href=\"%s\" target=\"_blank\" />contact our support</a> and we will look individually where the problem is in your WordPress installation.', __(\"https://devowl.io/support/\"));\n\n  // Use original `home_url` to support WordPress installations within a subfolder (https://git.io/JRM9g)\n  let rootUrl = window.realCookieBannerQueue.originalHomeUrl;\n  rootUrl = rootUrl.split(\"?\", 2)[0];\n  setStep?.(\"find-sitemap\");\n  const sitemapUrl = await findSitemap(rootUrl, \"rcb-force-sitemap\", [\"?sitemap=index&rcb-force-sitemap=1\"]);\n  if (sitemapUrl === false) {\n    throw new Error(`${__(\"We didn't find a sitemap on your website. We need it to scan all the subpages of your website. Do you have this feature disabled in your WordPress?\")} ${textOfferSupport}`);\n  }\n  setStep?.(\"collect-sitemap\");\n  let sites = [];\n  try {\n    sites = await crawl(rootUrl, sitemapUrl);\n  } catch (e) {\n    throw new Error(`${__(\"The sitemap could not be parsed. Therefore, we cannot check for services on your website.\")} ${textOfferSupport}`);\n  }\n  if (sites.length === 0) {\n    throw new Error(`${__(\"The sitemap is empty. So, we could not add any URLs to the scanner.\")} ${textOfferSupport}`);\n  }\n  return sites;\n}\nexport { crawlSitemap };","import { findByRobots, findByKnownFilenames } from \".\";\n\n/**\n * Find sitemap URL by different methods.\n *\n * @param rootUrl The root URL of your current website (with leading `/`!)\n * @param forceSitemapArgument See `findByRobots`\n */\nfunction findSitemap(rootUrl, forceSitemapArgument, tryKnownFilenames) {\n  return new Promise((resolve, reject) => {\n    /**\n     * We need to wrap the resolving mechanism in an additional non-blocking `setTimeout`.\n     * Why? Requesting a lot of wrong URLs with `findByKnownFilenames` could lead to a race\n     * condition within browsers and their Race Cache With Network (RCWN).\n     *\n     * Without this, this could lead to wrong error messages when requesting the found sitemap URL\n     * again, e.g. with `crawl`.\n     */\n    const resolver = result => setTimeout(() => resolve(result), 100);\n    (async () => {\n      try {\n        // 1. `robots.txt`\n        const robotsTxt = await findByRobots(rootUrl);\n        if (robotsTxt) {\n          resolver(robotsTxt);\n          return;\n        }\n\n        // 2. Known filenames\n        const byKnownFilenames = await findByKnownFilenames(rootUrl);\n        if (byKnownFilenames) {\n          resolver(byKnownFilenames);\n          return;\n        }\n\n        // 3. Force and activate `robots.txt` and sitemaps in WordPress itself\n        // e.g. when the setting of visibility is activated in Settings > Reading\n        // 1. `robots.txt`\n        if (forceSitemapArgument) {\n          const robotsTxtForce = await findByRobots(rootUrl, forceSitemapArgument);\n          if (robotsTxtForce) {\n            resolver(robotsTxtForce);\n            return;\n          }\n        }\n\n        // 4. Try another set of known filenames\n        if (tryKnownFilenames) {\n          const byKnownFilenamesCustom = await findByKnownFilenames(rootUrl, tryKnownFilenames);\n          if (byKnownFilenamesCustom) {\n            resolver(byKnownFilenamesCustom);\n            return;\n          }\n        }\n        resolver(false);\n      } catch (e) {\n        reject(e);\n      }\n    })();\n  });\n}\nexport { findSitemap };","import _Empty from \"antd/es/empty\";\nimport _Progress from \"antd/es/progress\";\nimport _Spin from \"antd/es/spin\";\nimport { useEffect, useState } from \"react\";\nimport { _i, __ } from \"../../../utils\";\nimport { observer } from \"mobx-react\";\nimport { useLocationQuery, useScannerFromSitemap } from \"../../../hooks\";\nimport { useStores } from \"../../../store\";\nimport { CheckCircleTwoTone, IssuesCloseOutlined } from \"@ant-design/icons\";\nconst ScannerProgress = observer(() => {\n  const {\n    scannerStore: {\n      canShowResults,\n      foundScanResultsCount,\n      needsAttentionCount\n    }\n  } = useStores();\n  const [statusCheckInterval, setStatusCheckInterval] = useState(undefined);\n  const {\n    status,\n    currentJob,\n    total,\n    percent,\n    remaining,\n    cancelling,\n    handleStart,\n    handleCancel,\n    step,\n    stepText\n  } = useScannerFromSitemap(statusCheckInterval, \"rcb-scan-list\");\n  const disableScanButton = step !== \"idle\";\n  // Allow to force a preset by query argument so the preset selector is disabled\n  const {\n    start\n  } = useLocationQuery();\n  useEffect(() => {\n    if (start) {\n      handleStart();\n    }\n  }, []);\n\n  // Provide \"live\" refresh while scanning the complete website\n  useEffect(() => {\n    setStatusCheckInterval(remaining > 0 || step === \"done\" ? 5000 : undefined);\n  }, [remaining, step]);\n  return remaining === undefined ? /*#__PURE__*/React.createElement(_Spin, {\n    style: {\n      display: \"block\"\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wp-clearfix\"\n  }, canShowResults && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: \"left\",\n      margin: \"5px 10px\"\n    }\n  }, needsAttentionCount === 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CheckCircleTwoTone, {\n    twoToneColor: \"#52c41a\"\n  }), \"\\xA0\", __(\"All recommendations applied\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IssuesCloseOutlined, {\n    style: {\n      color: \"#dba617\"\n    }\n  }), \"\\xA0\", __(\"%d of %d recommendations applied\", foundScanResultsCount - needsAttentionCount, foundScanResultsCount))), status === \"failed\" ? /*#__PURE__*/React.createElement(_Empty, {\n    style: {\n      clear: \"both\"\n    },\n    description: __(\"Scan failed\"),\n    image: /*#__PURE__*/React.createElement(_Progress, {\n      type: \"circle\",\n      width: 100,\n      percent: 100,\n      status: \"exception\"\n    })\n  }) : status === \"done\" ? /*#__PURE__*/React.createElement(_Empty, {\n    style: {\n      clear: \"both\"\n    },\n    description: __(\"Scan completed\"),\n    image: /*#__PURE__*/React.createElement(_Progress, {\n      type: \"circle\",\n      width: 100,\n      percent: 100\n    })\n  }) : remaining > 0 && currentJob && total ? /*#__PURE__*/React.createElement(_Empty, {\n    style: {\n      clear: \"both\"\n    },\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, _i(__(\"Currently scanning {{code}}%s{{/code}} (%d of %d pages scanned)...\", currentJob.data.url, total - remaining, total), {\n      code: /*#__PURE__*/React.createElement(\"code\", null)\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notice notice-info inline below-h2 notice-alt\",\n      style: {\n        margin: \"10px 0 0 0\",\n        display: \"inline-block\"\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", null, __(\"You can add already found services, edit your website or have a coffee in the meantime. The scanner runs in the background.\")))),\n    image: /*#__PURE__*/React.createElement(_Progress, {\n      type: \"circle\",\n      width: 100,\n      percent: percent\n    })\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button button-primary\",\n    onClick: handleCancel,\n    disabled: cancelling\n  }, __(\"Cancel scan\"))) : canShowResults ? /*#__PURE__*/React.createElement(\"button\", {\n    id: \"rcb-btn-scan-start\",\n    className: \"button button-primary alignright\",\n    onClick: handleStart,\n    disabled: disableScanButton,\n    style: {\n      marginBottom: 10,\n      display: step !== \"done\" ? undefined : \"none\"\n    }\n  }, stepText) : /*#__PURE__*/React.createElement(_Empty, {\n    description: __(\"Scan your website for services that may set cookies or process personal data to obtain consent.\")\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button button-primary\",\n    onClick: handleStart,\n    disabled: disableScanButton\n  }, stepText)));\n});\nexport { ScannerProgress };","import _Modal from \"antd/es/modal\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { fetchStatus, refreshQueue } from \"@devowl-wp/real-queue\";\nimport { useStores } from \"../store\";\nimport { __ } from \"../utils\";\nimport { useScannerProgress } from \".\";\nimport { crawlSitemap } from \"../others\";\n/**\n * Returns a callback which can be used within your button. It automatically\n * collects all scannable urls and posts it to the queue.\n */\nfunction useScannerFromSitemap(fetchStatusInterval, fetchAdditionalData) {\n  const [step, setStep] = useState(\"idle\");\n  const {\n    remaining,\n    ...rest\n  } = useScannerProgress(fetchStatusInterval, fetchAdditionalData, useCallback(() => {\n    setStep(\"idle\");\n  }, []));\n  const {\n    scannerStore,\n    checklistStore\n  } = useStores();\n  const handleStart = useCallback(async () => {\n    try {\n      const sites = await crawlSitemap(setStep);\n      setStep(\"add-to-queue\");\n      await scannerStore.addUrlsToQueue({\n        urls: sites,\n        purgeUnused: true\n      });\n      await Promise.all([scannerStore.fetchResultExternals(), scannerStore.fetchResultPresets(), refreshQueue()]);\n      setStep(\"done\");\n      checklistStore.fetchChecklist();\n    } catch (e) {\n      if (e instanceof Error) {\n        _Modal.error({\n          title: __(\"Whoops!\"),\n          content: /*#__PURE__*/React.createElement(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: e.message\n            }\n          })\n        });\n      }\n      setStep(\"idle\");\n    }\n  }, []);\n\n  // Initially fetch status of the queue to get immediate status\n  useEffect(() => {\n    fetchStatus(true);\n  }, []);\n  const stepText = useMemo(() => {\n    switch (step) {\n      case \"idle\":\n        return __(\"Scan complete website\");\n      case \"find-sitemap\":\n        return __(\"Find your website sitemap...\");\n      case \"collect-sitemap\":\n        return __(\"Collect all scannable URLs...\");\n      case \"add-to-queue\":\n      case \"done\":\n        // Pseudo-text, we are finished but our queue-status is not yet updated\n        return __(\"Add URLs to queue...\");\n      default:\n        break;\n    }\n    return \"\";\n  }, [step]);\n  return {\n    handleStart,\n    step,\n    stepText,\n    setStep,\n    remaining,\n    ...rest\n  };\n}\nexport { useScannerFromSitemap };","import _Dropdown from \"antd/es/dropdown\";\nimport _Modal from \"antd/es/modal\";\nimport _Spin from \"antd/es/spin\";\nimport _message from \"antd/es/message\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { refreshQueue } from \"@devowl-wp/real-queue\";\nimport { observer } from \"mobx-react\";\nimport { __ } from \"../../../../utils\";\nimport { CodeMirror } from \"../../..\";\nimport wp from \"wp\";\nconst ScannerMarkupPopover = observer(_ref => {\n  let {\n    record\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const {\n    data: {\n      id\n    },\n    markup,\n    store\n  } = record;\n  const cmSettings = useMemo(() => markup ? {\n    ...window.cm_settings,\n    codemirror: {\n      ...wp.codeEditor.defaultSettings.codemirror,\n      mode: markup.mime,\n      lint: false,\n      // Disable linting as e.g. only starting-tags are captured without closing tag\n      readOnly: true\n    }\n  } : {}, [markup]);\n  const toggleOpen = useCallback(() => {\n    if (open) {\n      setOpen(false);\n    } else {\n      setOpen(true);\n      store.fetchMarkup(id);\n    }\n  }, [open]);\n  const scanAgain = useCallback(async () => {\n    store.addUrlsToQueue({\n      urls: [record.data.sourceUrl],\n      purgeUnused: false\n    });\n    Promise.all([store.fetchResultExternals(), store.fetchResultPresets(), refreshQueue()]);\n    _message.info(__(\"Page is scheduled for scanning again...\"));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Modal, {\n    title: __(\"Element found by markup\"),\n    open: open,\n    width: 700,\n    bodyStyle: {\n      paddingBottom: 0\n    },\n    okButtonProps: {\n      style: {\n        display: \"none\"\n      }\n    },\n    onCancel: toggleOpen,\n    cancelText: __(\"Close\")\n  }, /*#__PURE__*/React.createElement(_Spin, {\n    spinning: !markup\n  }, markup && /*#__PURE__*/React.createElement(CodeMirror, {\n    settings: cmSettings,\n    value: markup.markup\n  }))), /*#__PURE__*/React.createElement(_Dropdown.Button, {\n    onClick: toggleOpen,\n    menu: {\n      items: [{\n        key: \"scan-again\",\n        onClick: scanAgain,\n        label: __(\"Scan again\")\n      }]\n    }\n  }, __(\"Open markup\")));\n});\nexport { ScannerMarkupPopover };","import _Tooltip from \"antd/es/tooltip\";\nimport _Tag from \"antd/es/tag\";\nimport _Empty from \"antd/es/empty\";\nimport _Result from \"antd/es/result\";\nimport _Table from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { __ } from \"../../../../utils\";\nimport { CheckCircleTwoTone, CloseCircleTwoTone, QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { ScannerMarkupPopover } from \".\";\nimport { useStores } from \"../../../../store\";\nimport { useScannerProgress } from \"../../../../hooks\";\nconst {\n  Column\n} = _Table;\nconst ScannerAllExternalUrlsTable = observer(_ref => {\n  let {\n    instance,\n    style,\n    reloadDependencies = [],\n    reload = true\n  } = _ref;\n  const {\n    scannerStore\n  } = useStores();\n  const {\n    identifier,\n    busy\n  } = instance;\n  const urls = scannerStore.resultAllExternalUrls.get(identifier);\n  const getRowKey = useCallback(_ref2 => {\n    let {\n      data: {\n        id\n      }\n    } = _ref2;\n    return id;\n  }, []);\n  const {\n    remaining\n  } = useScannerProgress();\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function doAsync() {\n      if (reload) {\n        try {\n          await scannerStore.fetchResultAllExternals(instance);\n          setError(\"\");\n        } catch (e) {\n          setError(e.responseJSON?.message || e.message);\n        }\n      }\n    }\n    doAsync();\n  }, [instance, reload, ...reloadDependencies]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, remaining > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notice notice-info below-h2 notice-alt\",\n    style: {\n      margin: \"0 0 10px\"\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", null, __(\"Since the scanner is currently still running, the table may be refreshed.\"))), /*#__PURE__*/React.createElement(_Table, {\n    locale: {\n      emptyText: error ? /*#__PURE__*/React.createElement(_Result, {\n        title: __(\"Something went wrong.\"),\n        subTitle: error,\n        status: \"500\"\n      }) : /*#__PURE__*/React.createElement(_Empty, {\n        description: __(\"No external URL found\")\n      })\n    },\n    dataSource: Array.from(urls ? urls.values() : []),\n    rowKey: getRowKey,\n    size: \"small\",\n    bordered: true,\n    style: style,\n    loading: !urls || urls.size === 0 ? busy : false\n  }, /*#__PURE__*/React.createElement(Column, {\n    title: __(\"Last scanned\"),\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => new Date(a.data.lastScanned).getTime() - new Date(b.data.lastScanned).getTime(),\n    dataIndex: [\"data\", \"lastScanned\"],\n    key: \"created\",\n    render: (value, _ref3) => {\n      let {\n        data: {\n          lastScanned\n        }\n      } = _ref3;\n      return new Date(lastScanned).toLocaleString(document.documentElement.lang);\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: __(\"HTML Tag\"),\n    dataIndex: [\"data\", \"tag\"],\n    key: \"tag\",\n    render: (value, _ref4) => {\n      let {\n        data: {\n          tag\n        }\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(_Tag, null, `<${tag} />`);\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: /*#__PURE__*/React.createElement(_Tooltip, {\n      title: __(\"This status shows you if the URL was blocked by a content blocker you defined.\")\n    }, /*#__PURE__*/React.createElement(\"span\", null, __(\"Blocked?\"), \" \", /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      style: {\n        color: \"#9a9a9a\"\n      }\n    }))),\n    sorter: (a, b) => a.data.blocked === b.data.blocked ? 0 : a.data.blocked ? -1 : 1,\n    dataIndex: [\"data\", \"blocked\"],\n    key: \"blocked\",\n    render: (value, _ref5) => {\n      let {\n        data: {\n          blocked\n        }\n      } = _ref5;\n      return blocked ? /*#__PURE__*/React.createElement(CheckCircleTwoTone, {\n        twoToneColor: \"#52c41a\"\n      }) : /*#__PURE__*/React.createElement(CloseCircleTwoTone, {\n        twoToneColor: \"#eb2f96\"\n      });\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: __(\"Blocked URL\"),\n    dataIndex: [\"data\", \"blockedUrl\"],\n    key: \"blockedUrl\",\n    render: (value, _ref6) => {\n      let {\n        blockedUrlTruncate,\n        data: {\n          blockedUrl\n        }\n      } = _ref6;\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: blockedUrl,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        title: blockedUrl\n      }, blockedUrlTruncate);\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: __(\"Found on this URL\"),\n    sorter: (a, b) => a.data.sourceUrl.localeCompare(b.data.sourceUrl),\n    dataIndex: [\"data\", \"sourceUrl\"],\n    key: \"sourceUrl\",\n    render: (value, _ref7) => {\n      let {\n        sourceUrlTruncate,\n        data: {\n          sourceUrl\n        }\n      } = _ref7;\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: sourceUrl,\n        target: \"_blank\",\n        rel: \"noreferrer\"\n      }, sourceUrlTruncate);\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: __(\"Actions\"),\n    dataIndex: [\"data\", \"markup\"],\n    key: \"markup\",\n    render: (value, record) => record.data.markup ? /*#__PURE__*/React.createElement(ScannerMarkupPopover, {\n      record: record\n    }) : \"\"\n  })));\n});\nexport { ScannerAllExternalUrlsTable };","import _Modal from \"antd/es/modal\";\nimport _message from \"antd/es/message\";\nimport { useCallback, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { _n, __ } from \"../../../utils\";\nimport { refreshQueue } from \"@devowl-wp/real-queue\";\nimport { ScannerAllExternalUrlsTable } from \".\";\nimport { useStores } from \"../../../store\";\nconst ScannerPresetCardActionOpenExternalUrlsTable = observer(_ref => {\n  let {\n    identifier,\n    scanned,\n    onVisibleChange\n  } = _ref;\n  const {\n    scannerStore\n  } = useStores();\n  const {\n    resultPresets\n  } = scannerStore;\n  const resultPreset = resultPresets.get(identifier);\n  const allUrls = [];\n  const {\n    data: {\n      name\n    }\n  } = resultPreset;\n  const [expanded, setExpanded] = useState(false);\n  const toggleExpandExternalUrls = useCallback(() => {\n    onVisibleChange?.(!expanded);\n    setExpanded(!expanded);\n  }, [identifier, expanded]);\n  const scanAllAgain = useCallback(async () => {\n    const urls = scannerStore.resultAllExternalUrls.get(identifier);\n    const arrayUrls = Array.from(urls ? urls.values() : []);\n    for (const url of arrayUrls) {\n      allUrls.push(url.data.sourceUrl);\n    }\n    await scannerStore.addUrlsToQueue({\n      urls: allUrls,\n      purgeUnused: false\n    });\n    _message.info(__(\"Pages are scheduled for scanning again...\"));\n    await Promise.all([scannerStore.fetchResultExternals(), scannerStore.fetchResultPresets(), refreshQueue()]);\n  }, []);\n\n  // Live update all the URLs if the user has expanded the URL list\n  const foundOnSitesCount = scanned === false ? 0 : scanned.foundOnSitesCount;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Modal, {\n    title: name,\n    open: expanded,\n    width: 1400,\n    bodyStyle: {\n      paddingBottom: 0\n    },\n    onCancel: toggleExpandExternalUrls,\n    cancelText: __(\"Close\"),\n    cancelButtonProps: {\n      style: {\n        float: \"right\",\n        marginLeft: \"10px\"\n      }\n    },\n    okButtonProps: {\n      type: \"default\"\n    },\n    onOk: scanAllAgain,\n    okText: __(\"Scan these pages again\")\n  }, /*#__PURE__*/React.createElement(ScannerAllExternalUrlsTable, {\n    instance: resultPreset,\n    reload: expanded && foundOnSitesCount > 0,\n    reloadDependencies: [expanded, foundOnSitesCount]\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      toggleExpandExternalUrls();\n    }\n  }, _n(\"On %d page\", \"On %d pages\", foundOnSitesCount, foundOnSitesCount)));\n});\nexport { ScannerPresetCardActionOpenExternalUrlsTable };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _Divider from \"antd/es/divider\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { ConfigContent, PresetSelector } from \"../..\";\nimport { useStores } from \"../../../store\";\nimport { __ } from \"../../../utils\";\nimport { ScannerPresetCardActionOpenExternalUrlsTable } from \".\";\nimport { useScannerProgress } from \"../../../hooks\";\nconst ScannerPresetSelector = observer(() => {\n  const [busy, setBusy] = useState(false);\n  const {\n    scannerStore,\n    cookieStore\n  } = useStores();\n  const {\n    resultPresets,\n    busyResultPresets\n  } = scannerStore;\n  const {\n    remaining\n  } = useScannerProgress();\n  const {\n    essentialGroup\n  } = cookieStore;\n  const [hasModalOpen, setHasModalOpen] = useState(false);\n\n  // Initially fetch the cookie groups as we need the ID of the essential group\n  useEffect(() => {\n    cookieStore.fetchGroups();\n  }, []);\n  const handleOnSelect = useCallback(async attributes => {\n    if (hasModalOpen || !attributes || busy) {\n      return;\n    }\n    setBusy(true);\n    const {\n      identifier: blockerIdentifier\n    } = attributes;\n    const preset = scannerStore.resultPresets.get(blockerIdentifier);\n\n    // Always navigate back to the scanner results\n    const navigateAfterCreation = `navigateAfterCreation=${encodeURIComponent(\"#scanner\")}`;\n    try {\n      await preset.fetchAttributes();\n    } catch (e) {\n      // It is only a service\n      setTimeout(() => window.location.href = `#/cookies/${essentialGroup?.key}/new?force=${blockerIdentifier}&${navigateAfterCreation}`, 0);\n      setBusy(false);\n      return;\n    }\n    const {\n      data: {\n        hidden\n      },\n      attributes: {\n        serviceTemplates: [firstCookie]\n      }\n    } = preset;\n    if (!firstCookie) {\n      return;\n    }\n    if (typeof firstCookie !== \"number\" || hidden) {\n      if (hidden) {\n        // It is a hidden content blocker, so we can only create a service\n        setTimeout(() => window.location.href = `#/cookies/${essentialGroup?.key}/new?force=${blockerIdentifier}&${navigateAfterCreation}`, 0);\n      } else if (typeof firstCookie !== \"number\") {\n        // Service (Cookie) does not exist -> directly navigate to the service and force content blocker to be created\n        const {\n          identifier: cookieIdentifier\n        } = firstCookie;\n        setTimeout(() => window.location.href = `#/cookies/${essentialGroup?.key}/new?force=${cookieIdentifier}&attributes=${JSON.stringify({\n          createContentBlocker: firstCookie.attributes.group?.toLowerCase() !== essentialGroup?.data.name.toLowerCase(),\n          createContentBlockerId: blockerIdentifier\n        })}&${navigateAfterCreation}`, 0);\n      }\n    } else {\n      // Service (Cookie) already exists -> directly navigate to the content blocker\n      setTimeout(() => window.location.href = `#/blocker/new?force=${blockerIdentifier}&${navigateAfterCreation}`, 0);\n    }\n    setBusy(false);\n  }, [busy, hasModalOpen, essentialGroup]);\n  return /*#__PURE__*/React.createElement(ConfigContent, null, /*#__PURE__*/React.createElement(_Divider, null, __(\"Services, for which you should obtain consent\")), /*#__PURE__*/React.createElement(PresetSelector, {\n    type: \"contentBlocker\",\n    presets: Array.from(resultPresets.values()).map(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _ref => {\n      let {\n        data: {\n          logoFile,\n          ...preset\n        },\n        fullLogoUrl\n      } = _ref;\n      return {\n        ...preset,\n        logoUrl: fullLogoUrl\n      };\n    }),\n    fetchingPresets: busyResultPresets && /* Do not show loading indicator while scanning */!remaining || busy,\n    onSelect: handleOnSelect,\n    renderActions: useCallback(props => {\n      const {\n        identifier,\n        version,\n        attributes_name,\n        scanned,\n        tier\n      } = props;\n      return [/*#__PURE__*/React.createElement(\"a\", {\n        key: \"create-now\",\n        onClick: () => tier !== \"pro\" && handleOnSelect({\n          identifier,\n          version,\n          attributes_name\n        })\n      }, __(\"Create now\")), scanned && /*#__PURE__*/React.createElement(ScannerPresetCardActionOpenExternalUrlsTable, _extends({}, props, {\n        key: \"table\",\n        onVisibleChange: setHasModalOpen\n      }))].filter(Boolean);\n    }, []),\n    showSearch: false,\n    showDisabled: false,\n    showHidden: true\n  }));\n});\nexport { ScannerPresetSelector };","import _List from \"antd/es/list\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport { useMemo } from \"react\";\nconst ScannerLoadingSkeleton = _ref => {\n  let {\n    count\n  } = _ref;\n  const dataSource = useMemo(() => {\n    const d = [];\n    for (let key = 0; key < count; key++) {\n      d.push({\n        key\n      });\n    }\n    return d;\n  }, [count]);\n  return /*#__PURE__*/React.createElement(_List, {\n    dataSource: dataSource,\n    renderItem: () => /*#__PURE__*/React.createElement(_List.Item, null, /*#__PURE__*/React.createElement(_Skeleton, {\n      loading: true,\n      active: true,\n      avatar: false,\n      paragraph: {\n        rows: 1\n      }\n    }))\n  });\n};\nexport { ScannerLoadingSkeleton };","import _Popover from \"antd/es/popover\";\nimport { useCallback } from \"react\";\nimport { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { __, _i } from \"../../../utils\";\nimport { useRouteBlocker } from \"../../../hooks\";\nimport { useStores } from \"../../../store\";\nimport { useCookieExpertsModal } from \"@devowl-wp/react-cookie-banner-admin\";\nconst ScannerExternalUrlActionPopover = observer(_ref => {\n  let {\n    item\n  } = _ref;\n  const [isVisible, setIsVisible] = useState(false);\n  const {\n    cookieStore: {\n      essentialGroup\n    }\n  } = useStores();\n  const {\n    openDialog\n  } = useCookieExpertsModal();\n  const {\n    data: {\n      host\n    }\n  } = item;\n  const {\n    addLink: addBlockerLink\n  } = useRouteBlocker();\n  const toggleVisible = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n  const openCookieExperts = useCallback(() => {\n    setIsVisible(false);\n    openDialog();\n  }, [openDialog]);\n\n  // Always navigate back to the scanner results\n  const navigateAfterCreation = `navigateAfterCreation=${encodeURIComponent(window.location.href)}`;\n  return /*#__PURE__*/React.createElement(_Popover, {\n    open: isVisible,\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"strong\", null, _i(__(\"Does {{i}}%s{{/i}} belong to an essential service without which your website would technically no longer work?\", host), {\n      i: /*#__PURE__*/React.createElement(\"i\", null)\n    }))), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"button button-primary\",\n      href: `${addBlockerLink}?force=scratch&attributes=${JSON.stringify({\n        rules: [`*${host}*`]\n      })}&${navigateAfterCreation}`\n    }, __(\"No\")), \"\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n      className: \"button\",\n      href: `#/cookies/${essentialGroup?.key}/new?force=scratch&${navigateAfterCreation}`\n    }, __(\"Yes\")), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: openCookieExperts\n    }, __(\"I do not know\"))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\"\n    }, _i(__(\"{{strong}}No:{{/strong}} Non-essential services that process personal data (e.g. IP address in some countries) or set cookies may only be loaded after consent. You should block them using a content blocker until consent is given. {{i}}Examples would be iframes, YouTube and similar embeddings or tracking tools.{{/i}}\"), {\n      strong: /*#__PURE__*/React.createElement(\"strong\", null),\n      i: /*#__PURE__*/React.createElement(\"i\", null)\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\"\n    }, _i(__(\"{{strong}}Yes (rare cases):{{/strong}} You should inform your users about the use of the service in the essential services group. You do not need to create a content blocker, as the service can be loaded without consent. {{i}}Examples are CDNs, privacy-friendly spam protection tools or security tools.{{/i}}\"), {\n      strong: /*#__PURE__*/React.createElement(\"strong\", null),\n      i: /*#__PURE__*/React.createElement(\"i\", null)\n    })), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: toggleVisible\n    }, __(\"Close\")))),\n    placement: \"right\",\n    overlayStyle: {\n      maxWidth: 350\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: toggleVisible\n  }, __(\"Handle external URL\")));\n});\nexport { ScannerExternalUrlActionPopover };","import _Spin from \"antd/es/spin\";\nimport _List from \"antd/es/list\";\nimport _Tag from \"antd/es/tag\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport { useCallback, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { __, _n } from \"../../../utils\";\nimport { ScannerAllExternalUrlsTable, ScannerExternalUrlActionPopover } from \".\";\nimport { useStores } from \"../../../store\";\nimport { refreshQueue } from \"@devowl-wp/real-queue\";\nconst ScannerListItem = observer(_ref => {\n  let {\n    item\n  } = _ref;\n  const [expanded, setExpanded] = useState(false);\n  const {\n    data: {\n      host,\n      foundOnSitesCount,\n      tags,\n      ignored\n    },\n    inactive,\n    blockedStatus,\n    blockedStatusText,\n    busy\n  } = item;\n  const {\n    scannerStore\n  } = useStores();\n  const toggleExpandExternalUrls = useCallback(() => {\n    setExpanded(!expanded);\n  }, [host, expanded]);\n  const scanAllAgain = useCallback(async () => {\n    const allSourceUrls = [];\n    try {\n      await scannerStore.fetchResultAllExternals(item);\n      scannerStore.resultAllExternalUrls.get(item.data.host).forEach(item => {\n        allSourceUrls.push(item.data.sourceUrl);\n      });\n      await scannerStore.addUrlsToQueue({\n        urls: allSourceUrls,\n        purgeUnused: false\n      });\n      await Promise.all([scannerStore.fetchResultExternals(), refreshQueue()]);\n    } catch (e) {\n      if (e instanceof Error) {\n        console.log(e);\n      }\n    }\n  }, [item]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_List.Item, {\n    itemID: host,\n    actions: [/*#__PURE__*/React.createElement(ScannerExternalUrlActionPopover, {\n      key: \"handle\",\n      item: item\n    }), ignored && /*#__PURE__*/React.createElement(_Popconfirm, {\n      key: \"delete\",\n      title: __(\"Are you sure that you want to restore this entry?\"),\n      placement: \"bottomRight\",\n      onConfirm: () => {\n        item.ignore(false);\n        setExpanded(false);\n      },\n      okText: __(\"Restore\"),\n      cancelText: __(\"Cancel\"),\n      overlayStyle: {\n        maxWidth: 350\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      }\n    }, __(\"Restore\"))), !inactive && /*#__PURE__*/React.createElement(_Popconfirm, {\n      key: \"delete\",\n      title: __(\"Are you sure that you want to ignore this entry?\"),\n      placement: \"bottomRight\",\n      onConfirm: () => {\n        item.ignore();\n        setExpanded(false);\n      },\n      okText: __(\"Ignore\"),\n      cancelText: __(\"Cancel\"),\n      overlayStyle: {\n        maxWidth: 350\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      }\n    }, __(\"Ignore\"))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: scanAllAgain\n    }, __(\"Scan these pages again\")))].filter(Boolean),\n    style: {\n      opacity: inactive && !expanded ? 0.6 : 1\n    }\n  }, /*#__PURE__*/React.createElement(_Spin, {\n    spinning: busy\n  }, /*#__PURE__*/React.createElement(_List.Item.Meta, {\n    title: /*#__PURE__*/React.createElement(\"span\", null, host, \" \", tags.map(tag => /*#__PURE__*/React.createElement(_Tag, {\n      key: tag\n    }, `<${tag} />`)), ignored && /*#__PURE__*/React.createElement(_Tag, null, __(\"Ignored\")), blockedStatus !== \"none\" && /*#__PURE__*/React.createElement(_Tag, {\n      color: blockedStatus === \"partial\" ? \"warning\" : \"success\"\n    }, blockedStatusText)),\n    description: /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-link\",\n      onClick: toggleExpandExternalUrls\n    }, expanded ? __(\"Close\") : _n(\"Embeds found on %d page\", \"Embeds found on %d pages\", foundOnSitesCount, foundOnSitesCount))\n  }))), expanded && /*#__PURE__*/React.createElement(ScannerAllExternalUrlsTable, {\n    instance: item,\n    reload: expanded && foundOnSitesCount > 0,\n    reloadDependencies: [expanded, foundOnSitesCount],\n    style: {\n      marginTop: \"-6px\"\n    }\n  }));\n});\nexport { ScannerListItem };","import _List from \"antd/es/list\";\nimport _Divider from \"antd/es/divider\";\nimport { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { ScannerProgress, ScannerPresetSelector, ScannerLoadingSkeleton, ScannerListItem } from \".\";\nimport { __ } from \"../../../utils\";\nimport { useStores } from \"../../../store\";\nimport { useScannerProgress } from \"../../../hooks\";\nconst ScannerList = observer(() => {\n  const {\n    scannerStore\n  } = useStores();\n  const {\n    currentJob\n  } = useScannerProgress();\n  const {\n    presetsCount,\n    externalUrlsCount,\n    busyExternalUrls,\n    sortedExternalUrls,\n    canShowResults\n  } = scannerStore;\n  useEffect(() => {\n    scannerStore.fetchResultPresets();\n    scannerStore.fetchResultExternals();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ScannerProgress, null), canShowResults && presetsCount > 0 && /*#__PURE__*/React.createElement(ScannerPresetSelector, null), canShowResults && externalUrlsCount > 0 && (busyExternalUrls && currentJob === undefined ? /*#__PURE__*/React.createElement(ScannerLoadingSkeleton, {\n    count: externalUrlsCount\n  }) : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(_Divider, null, __(\"Embeds of external URLs to be checked\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: \"0px auto 20px\",\n      textAlign: \"center\"\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\"\n  }, __(\"You are embedding scripts, styles, iframes or similar from the following third-party servers. We currently do not have service templates for these. Therefore, you may have to create a service and/or content blocker yourself after you have assessed the situation.\"))), /*#__PURE__*/React.createElement(_List, null, sortedExternalUrls.map(item => /*#__PURE__*/React.createElement(ScannerListItem, {\n    item: item,\n    key: item.data.host\n  }))))));\n});\nexport { ScannerList };","import { observer } from \"mobx-react\";\nimport { Switch as RouteSwitch, Route, useRouteMatch } from \"react-router-dom\";\nimport { ConfigContent, ConfigHintModal } from \"..\";\nimport { ScannerList } from \".\";\nimport { __ } from \"../../../utils\";\nimport { useConfigHintText } from \"../../../hooks\";\nimport { BlockerNoticeNotActive } from \"../blocker\";\nconst ScannerRouter = observer(() => {\n  const {\n    path\n  } = useRouteMatch();\n  const hintText = useConfigHintText(\"scanner\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BlockerNoticeNotActive, {\n    style: {\n      margin: \"10px 0 0 0\"\n    }\n  }), /*#__PURE__*/React.createElement(RouteSwitch, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ConfigHintModal, {\n    identifier: \"scanner\",\n    title: __(\"What does the scanner find?\"),\n    width: 900\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    exact: true\n  }, /*#__PURE__*/React.createElement(ConfigContent, null, /*#__PURE__*/React.createElement(ScannerList, null), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: \"30px auto 0\",\n      textAlign: \"center\"\n    }\n  }, hintText))))));\n});\nexport { ScannerRouter };","import { useRouteMatch } from \"react-router-dom\";\nimport { useStores } from \"../store\";\nimport { useCallback } from \"react\";\nimport { BlockerModel } from \"../models\";\nconst useRouteBlocker = () => {\n  const {\n    params\n  } = useRouteMatch();\n  const {\n    cookieStore\n  } = useStores();\n\n  // Get blocker or return draft object\n  const blockerId = +params.blocker;\n  const id = isNaN(+blockerId) ? 0 : +blockerId;\n  const queried = !!blockerId;\n  const blocker = cookieStore.blockers.entries.get(id) || new BlockerModel(cookieStore.blockers, {\n    id: 0\n  });\n  const link = `#/blocker`;\n  const editLink = useCallback(_ref => {\n    let {\n      key\n    } = _ref;\n    return `#/blocker/edit/${key}`;\n  }, [blocker]);\n  const addLink = `#/blocker/new`;\n  return {\n    blocker,\n    id,\n    queried,\n    fetched: blocker.key !== 0,\n    link,\n    editLink,\n    addLink\n  };\n};\nexport { useRouteBlocker };"],"names":["BlockerNoticeNotActive","_ref","style","optionStore","blockerActive","allBlockerCount","React","createElement","className","__","href","REGEXP_URL_PATH","mapUrlToRootUrl","rootUrl","receivedUrl","query","arguments","length","undefined","rootUrlPath","match","path","receivedQuery","useQuery","substr","async","findByRobots","url","forceSitemapArgument","response","fetch","ok","correctedSitemapUrl","text","trim","responseCheckSitemap","body","test","e","KNOWN_FILENAMES","findByKnownFilenames","root","tryKnownFilenames","promises","map","filename","mode","promise","responseBody","indexOf","PSEUDO_URL_BASE","crawl","sitemapUrl","sites","document","DOMParser","parseFromString","parse","protocol","sitemapProtocol","URL","sitemapIndex","querySelector","indexUrls","Array","from","children","c","textContent","filter","Boolean","indexUrl","useUrl","urlSet","urls","urlInstance","toString","push","console","error","sort","a","b","crawlSitemap","setStep","textOfferSupport","window","realCookieBannerQueue","originalHomeUrl","split","Promise","resolve","reject","resolver","result","setTimeout","robotsTxt","byKnownFilenames","robotsTxtForce","byKnownFilenamesCustom","findSitemap","Error","ScannerProgress","scannerStore","canShowResults","foundScanResultsCount","needsAttentionCount","statusCheckInterval","setStatusCheckInterval","useState","status","currentJob","total","percent","remaining","cancelling","handleStart","handleCancel","step","stepText","fetchStatusInterval","fetchAdditionalData","rest","useScannerProgress","useCallback","checklistStore","addUrlsToQueue","purgeUnused","all","fetchResultExternals","fetchResultPresets","refreshQueue","fetchChecklist","title","content","dangerouslySetInnerHTML","__html","message","useEffect","fetchStatus","useMemo","useScannerFromSitemap","disableScanButton","start","useLocationQuery","display","float","margin","Fragment","CheckCircleTwoTone","twoToneColor","IssuesCloseOutlined","color","clear","description","image","type","width","_i","data","code","onClick","disabled","id","marginBottom","ScannerMarkupPopover","record","open","setOpen","markup","store","cmSettings","cm_settings","codemirror","mime","lint","readOnly","toggleOpen","fetchMarkup","scanAgain","sourceUrl","bodyStyle","paddingBottom","okButtonProps","onCancel","cancelText","spinning","settings","value","menu","items","key","label","Column","ScannerAllExternalUrlsTable","instance","reloadDependencies","reload","identifier","busy","resultAllExternalUrls","get","getRowKey","_ref2","setError","fetchResultAllExternals","responseJSON","doAsync","locale","emptyText","subTitle","dataSource","values","rowKey","size","bordered","loading","defaultSortOrder","sorter","Date","lastScanned","getTime","dataIndex","render","_ref3","toLocaleString","documentElement","lang","_ref4","tag","QuestionCircleOutlined","blocked","_ref5","CloseCircleTwoTone","_ref6","blockedUrlTruncate","blockedUrl","target","rel","localeCompare","_ref7","sourceUrlTruncate","ScannerPresetCardActionOpenExternalUrlsTable","scanned","onVisibleChange","resultPresets","resultPreset","allUrls","name","expanded","setExpanded","toggleExpandExternalUrls","scanAllAgain","arrayUrls","foundOnSitesCount","cancelButtonProps","marginLeft","onOk","okText","preventDefault","stopPropagation","_n","ScannerPresetSelector","setBusy","cookieStore","busyResultPresets","essentialGroup","hasModalOpen","setHasModalOpen","fetchGroups","handleOnSelect","attributes","blockerIdentifier","preset","navigateAfterCreation","encodeURIComponent","fetchAttributes","location","hidden","serviceTemplates","firstCookie","cookieIdentifier","JSON","stringify","createContentBlocker","group","toLowerCase","createContentBlockerId","presets","logoFile","fullLogoUrl","logoUrl","fetchingPresets","onSelect","renderActions","props","version","attributes_name","tier","showSearch","showDisabled","showHidden","ScannerLoadingSkeleton","count","d","renderItem","active","avatar","paragraph","rows","ScannerExternalUrlActionPopover","item","isVisible","setIsVisible","openDialog","useCookieExpertsModal","u","host","addLink","addBlockerLink","useRouteBlocker","toggleVisible","openCookieExperts","i","rules","strong","placement","overlayStyle","maxWidth","cursor","ScannerListItem","tags","ignored","inactive","blockedStatus","blockedStatusText","allSourceUrls","forEach","log","itemID","actions","onConfirm","ignore","opacity","marginTop","ScannerList","presetsCount","externalUrlsCount","busyExternalUrls","sortedExternalUrls","textAlign","ScannerRouter","useRouteMatch","hintText","useConfigHintText","Route","exact","params","blockerId","blocker","isNaN","queried","blockers","entries","editLink","fetched","link"],"sourceRoot":""}